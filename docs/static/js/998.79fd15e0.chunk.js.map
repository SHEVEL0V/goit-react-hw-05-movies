{"version":3,"file":"static/js/998.79fd15e0.chunk.js","mappings":"oOACA,EAA0B,yB,SCCX,SAASA,EAAT,GAAgC,IAAbC,EAAY,EAAZA,SAChC,OAAO,gBAAKC,UAAWC,EAAhB,SAA4BF,I,8BCY/BG,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,gCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAEZ,SAASE,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAO,UAAYJ,EACnBK,EAAU,oCAEhBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAASH,GAAMI,MAAK,SAAAC,GAClBV,EAAYU,QAEb,CAACL,IAEJ,IAAQM,EAAuDZ,EAAvDY,YAAaC,EAA0Cb,EAA1Ca,MAAOC,EAAmCd,EAAnCc,aAAcC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OAEpD,OACE,iCACE,oBAAQvB,UAAWC,EAAAA,EAAAA,OAAUuB,KAAK,SAASC,QAAS,kBAAMd,GAAU,IAApE,WACE,SAAC,MAAD,IADF,cAIA,iBAAKX,UAAWC,EAAAA,EAAAA,KAAhB,WACE,gBAAKyB,IAAKZ,EAAUK,EAAanB,UAAWC,EAAAA,EAAAA,IAAO0B,IAAI,OACvD,4BACE,wBAAKP,KACL,yCAAiBC,MACjB,sCACA,uBAAIC,KACJ,oCACA,uBACGC,GAAUA,EAAOK,KAAI,SAAAC,GAAE,OAAI,4BAAmBA,EAAGC,KAAtB,MAAWD,EAAGE,gBAIhD,UAACjC,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASkC,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,+BAIN,SAAClC,EAAD,WACE,SAAC,EAAAmC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CACErB,KAAK,OACLsB,SAAS,SAACjC,EAAD,CAAM6B,GAAItB,EAASK,QAASA,OAEvC,SAAC,KAAD,CAAOD,KAAK,UAAUsB,SAAS,SAAC/B,EAAD,CAAS2B,GAAItB,kB,kFCvElD2B,EAAW,+BACXC,EAAM,mCAEG,SAAeC,IAA9B,4CAAe,OAAf,oBAAe,6GAAwBzB,EAAxB,+BAA+B,GAAI0B,EAAnC,+BAA4C,GACnDC,EADO,UACEJ,GADF,OACavB,EADb,oBAC6BwB,GAD7B,OACmCE,GADnC,SAGUE,MAAMD,GAHhB,cAGPtB,EAHO,yBAINA,EAASwB,GAAKxB,EAASyB,OAASC,QAAQC,OAAO,IAAIC,MAAM,eAJnD,qE,kBCFf,KAAgB,KAAO,oBAAoB,MAAQ,qBAAqB,IAAM,mBAAmB,MAAQ,qBAAqB,QAAU,uBAAuB,OAAS","sources":["webpack://goit-react-hw-05-movies/./src/components/section/section.module.css?2f3b","components/section/section.jsx","components/views/MovieDetailsPage.jsx","services/fetch.js","webpack://goit-react-hw-05-movies/./src/components/views/stile.module.css?91cc"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"section_section__TrD0w\"};","import PropTypes from 'prop-types';\nimport s from './section.module.css';\nexport default function Section({ children }) {\n  return <div className={s.section}>{children}</div>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { lazy, Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport Section from '../section/section';\nimport Loading from '../loading/loading';\nimport fetchUrl from '../../services/fetch';\nimport s from './stile.module.css';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [cardFilm, setCardFilm] = useState({});\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  const path = '/movie/' + movieId;\n  const imgPath = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    fetchUrl(path).then(response => {\n      setCardFilm(response);\n    });\n  }, [path]);\n\n  const { poster_path, title, vote_average, overview, genres } = cardFilm;\n\n  return (\n    <>\n      <button className={s.button} type=\"button\" onClick={() => navigate(-1)}>\n        <FiArrowLeft />\n        Go back\n      </button>\n      <div className={s.card}>\n        <img src={imgPath + poster_path} className={s.img} alt=\" \"></img>\n        <div>\n          <h2>{title}</h2>\n          <p>Users score: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres && genres.map(el => <span key={el.id}>{el.name} </span>)}\n          </p>\n        </div>\n      </div>\n      <Section>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews </NavLink>\n          </li>\n        </ul>\n      </Section>\n      <Section>\n        <Suspense fallback={<Loading />}>\n          <Routes>\n            <Route\n              path=\"cast\"\n              element={<Cast id={movieId} imgPath={imgPath} />}\n            ></Route>\n            <Route path=\"reviews\" element={<Reviews id={movieId} />}></Route>\n          </Routes>\n        </Suspense>\n      </Section>\n    </>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '4fc86b17259ac63837b074fbab2b63b2';\n\nexport default async function fetchURL(path = '', option = '') {\n  const url = `${BASE_URL}${path}?api_key=${KEY}${option}`;\n\n  const response = await fetch(url);\n  return response.ok ? response.json() : Promise.reject(new Error('Not found'));\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"stile_card__l-gbO\",\"cards\":\"stile_cards__fPNUb\",\"img\":\"stile_img__9BN4r\",\"input\":\"stile_input__+nyRk\",\"imgCast\":\"stile_imgCast__Y8THD\",\"button\":\"stile_button__FMnO5\"};"],"names":["Section","children","className","s","Cast","lazy","Reviews","MovieDetailsPage","useState","cardFilm","setCardFilm","movieId","useParams","navigate","useNavigate","path","imgPath","useEffect","fetchUrl","then","response","poster_path","title","vote_average","overview","genres","type","onClick","src","alt","map","el","name","id","to","Suspense","fallback","element","BASE_URL","KEY","fetchURL","option","url","fetch","ok","json","Promise","reject","Error"],"sourceRoot":""}